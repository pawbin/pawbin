/* interpret css files as less... which imports it properly */
@import (less) "static/css/comp/reset.css";
@import "static/css/themes/pawbin.less";

/* these are separated because the vendor prefix would otherwise break the entire rule */
::selection      { background: @selection; color: @secondary; }
::-moz-selection { background: @selection; color: @secondary; }

/* GENERAL PAGE STYLING */

// lowest layer
// inherited styles that are most default go here

body {
  background-color: @bg-light;
  color: @primary;
  font: @body-md;
}

img {
  // images always try to be the width of their container
  width: 100%;
}

p img {
  // allows images inside of body paragraphs
  // to scale proportionally as much as they like
  width: auto;
  height: auto;
  max-width: 100%;
  max-height: 100%;
}

a {
  // all links are link colored and change on hover
  color: @link;
  &:hover { color: @primary; }
}

hr {
  height: 2px;
  border: none;
  margin: @sp-xs 0;
  background-color: fadeout(@secondary, 80%);
}

// headers directly follow title fonts
h1 { font: @title-xl; }
h2 { font: @title-lg; }
h3 { font: @title-md; }
h4 { font: @title-sm; color: @secondary; }
h5 { font: @title-xs; }
h6 { font: @title-xxs; font-style: italic; }

em { font-style: italic; }
strong { font-weight: bold; }
pre, code { font: @code-md; }

pre {
  background-color: @bg-dark;
  min-height: @sp-sm;
  height: auto;
  max-height: 360px;
  padding: @sp-sm;
  
  overflow-y: auto;
  resize: vertical;
  
  white-space: pre-wrap;
  word-break: break-word;
}

code {
  background-color: @bg-dark;
  padding: 4px 5px 5px;
  border-radius: @sp-xxs;
  
  word-break: break-word;
}

pre > code {
  background-color: initial;
  padding: initial;
  border-radius: initial;
  
  white-space: pre-wrap;
}

ol, ul {
  list-style-position: outside;
  padding-left: 16pt;
  line-height: 16pt;
}

ul { list-style-type: circle; }

blockquote {
  color: @secondary;
  padding: @sp-xs;
  padding-left: 16pt;
  background: fadeout(@secondary, 93%);
  border-radius: @sp-xxs;
}

nav {
  // navs are always flexboxes that can wrap
  display: flex;
  flex-flow: row wrap;
  // spaces elements apart
  .child-gutters(@sp-xxs);
  
  // we assume that that all immediate children
  // to nav are anchor tags
  a {
    flex: 0 0 auto;
    text-align: center;
    padding: @sp-xs @sp-sm;
  }
}

form {
  display: flex;
  flex-flow: column nowrap;
  
  &.inline {
    flex-flow: row nowrap;
  }
  
  .child-gutters(@sp-xs);
  
  .form-group {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    
  }
  
  label {
    flex: 1 1 @px-maxinputwidth;
    text-align: right;
    margin-right: @sp-sm;
  }
  
  input {
    flex: 1 1 @px-maxinputwidth;
  }
}

input {
  background-color: @bg-light;
  font: @body-sm;
  color: @primary;
  
  border: none;
  padding: @sp-xs;
  min-width: @px-mininputwidth;
  width: 100%;
  
  &:focus {
    border-bottom: 2px @primary;
  }
  
  &.inline {
    width: auto;
  }
  
  &[type="checkbox"] {
    min-width: initial;
    width: auto;
  }
}

button, .button {
  background-color: @bg-secondary;
  font: @body-sm;
  color: @cyan;
  
  border: none;
  padding: @sp-xs @sp-sm;
  text-align: center;
  
  &:hover {
    cursor: pointer;
    background-color: @bg-light;
    color: @primary;
  }
  
  &.disabled {
    background-color: unset;
    color: fade(@secondary, 40%);
    outline-offset: -2px;
    outline: 2px solid @bg-secondary;
    pointer-events: none;
  }
}

/* MIXINS */

// used to evenly space all children
.child-gutters(@spacing) {
  margin: -@spacing;
  > * { margin: @spacing; }
}

/* SCROLLBARS */

// chrome
::-webkit {
  &-scrollbar {
    width: @sp-md;

    &-track {
      background-color: @bg-dark;
    }
    
    &-thumb {
      background-color: @bg-primary;
    }
  }
  
  /* this doesn't work for whatever reason.
     thanks webkit.
  
  &-resizer {
    background-image: url(@img-pajamy);
    background-size: cover;
    opacity: 25%;
  }*/
}

// firefox
body {
  scrollbar-width: auto;
  scrollbar-color: @bg-primary @bg-dark;
}

/* STYLING FOR GENERAL CLASSES / IDS */

/* formatting classes */
.textcenter {
  text-align: center;
}
.textcaps {
  text-transform: uppercase;
}
.noscroll {
  touch-action: none;
}
.hidden {
  display: none !important;
}

// keep title white
.title a {
  color: @primary;
}

.avatar {
  line-height: 0;
  
  img {
    max-width: 200px;
  }
}

.notifs {
  position: fixed;
  top: @sp-md;
  z-index: 100;
  left: 0;
  right: 0;
  margin: auto;
  max-width: 640px;
  width: 80vw;
  pointer-events: none;
  
  .reference-notif {
    display: none;
  }
  
  .removed-notifs {
    position: absolute;
    top: 0;
    width: 100%;
    
    .notif {
      position: absolute;
    }
  }
  
  /* every notification is styled like this */
  .notif {
    background-color: fade(mix(@basic, @bg-dark, 45%), 90%);
    box-shadow: inset 0 0 0 1px @basic;
    box-sizing: border-box;
    position: relative;
    transition: 0.35s cubic-bezier(0.165, 0.84, 0.44, 1) /*cubic-bezier(0.23, 1, 0.32, 1)*/;
    transition-property: transform, height, opacity, margin-bottom;
    overflow: hidden;
    visibility: hidden;
    width: 100%;
    pointer-events: all;
    
    .content {
      margin: 6px 22px 6px 12px;
      overflow-wrap: break-word;
    }
  }
  
  & > .notif:nth-child(1) {
    z-index: 11;
  }
  
  & > .notif:nth-child(2) {
    z-index: 9;
  }
  
  & > .notif:nth-child(3) {
    z-index: 7;
  }
  
  & > .notif:nth-child(4) {
    margin-bottom: -10px;
    z-index: 5;
    opacity: 0.9;
  }
  
  & > .notif:nth-child(5) {
    transform: scale(0.98);
    margin-bottom: -16px;
    z-index: 3;
    opacity: 0.75
  }
  
  & > .notif:nth-child(6) {
    transform: scale(0.96);
    margin-bottom: -22px;
    /*margin-bottom: 8px;*/
    z-index: 1;
    opacity: 0.4;
  }
  
  & > .notif:nth-child(n+7) {
    transform: scale(0.92);
    margin-bottom: -31px;
    opacity: 0;
    pointer-events: none;
    /*z-index: -3;*/
  }
  
  /* mixin for specific notif type styling */
  .notif-(@type) {
    .notif-@{type} {
      background-color: fade(mix(@@type, @bg-dark, 45%), 90%);
      box-shadow: inset 0 0 0 1px @@type;
    }
  }
  
  /* run mixins */
  
  .notif-(basic);
  .notif-(success);
  .notif-(info);
  .notif-(warning);
  .notif-(danger);
  .notif-(alert);
  
  /* notif types that need even more specific type styling */
  
  .notif-error {
    background-color: fade(mix(@danger, @bg-dark, 45%), 90%);
    box-shadow: inset 0 0 0 1px @danger;
  }
  
  .notif-close {
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    padding: 6px 9px;
  }
}

.island {
  background-color: @bg-primary;
  padding: @sp-lg;
  
  // items on islands are spaced
  >:not(:last-child) {
    margin-bottom: @sp-sm;
  }
  
  pre {
    &:not(:last-child) {
      margin-bottom: @sp-md;
    }
  }
}

.heading {
  display: flex;
  flex-flow: row nowrap;
  
  @media @xs { 
    flex-flow: column nowrap;
    align-items: center;
    text-align: center;
    
    .actions {
      align-self: stretch;
    }
  }
  
  >:not(:last-child) {
    margin: 0 @sp-lg 0 0;
    @media @xs { margin: 0 0 @sp-sm 0;}
  }
  
  h2 {
    @media @xs { margin-bottom: @sp-sm; }
  }
  
  &.searchbar {
    justify-content: space-between;
    align-items: flex-end;
  }
  
  .avatar {
    flex: 0 1 160px;
    @media @xs { flex: 1 0 0; }
  }
  
  .details {
    flex: 1 0 140px;
    @media @xs { flex: 1 0 0; }
    
    >:not(:last-child) { margin-bottom: @sp-sm; }
  }
  
  .actions {
    flex: 0 0 150px;
    @media @xs { flex: 1 0 0; }
    
    display: flex;
    flex-flow: column nowrap;
    
    .child-gutters(@sp-xxs);
  }
}

.grid {
  display: grid;
  grid-gap: @sp-sm @sp-sm;
  
  .card {
    background-color: @bg-light;
    padding: @sp-sm;
    
    /* REMOVE THIS LATER... no reason to break words in cards */
    word-break: break-all;
    
    a { display: block; }
    
    a>:not(:last-child) {
      margin-bottom: @sp-sm;
    }
  }
  
  .row {
    background-color: @bg-light;
    padding: @sp-sm;
    
    >:not(:last-child), a>:not(:last-child) {
      margin-right: @sp-sm;
    }
  }
  
  .row, .row a {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    
    img { width: 50px; }
  }
}

.usernav {
  // kill the side usernav on mobile
  @media @sm {
    display: none;
  }
  width: @px-usernav;
  // follows the page scroll
  top: @sp-lg;
  position: sticky;
  
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  
  .avatar {
    margin: @sp-sm;
    line-height: 0;
  }
  
  .name a {
    word-break: break-word;
    color: @primary;
  }
  
  h2.name a {
    font-weight: bold;
  }
  
  .nickname {
    margin-bottom: @sp-xxs;
  }
  
  .username {
    margin-bottom: @sp-sm;
  }
  
  .rights {
    font-size: 9pt;
    margin-bottom: @sp-sm;
    
    a { color: @secondary; }
  }
  
  .currency {
    width: 100%;
    
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    > * { flex: 1 1 50%; }
    
    margin: -@sp-xs;
    > * { margin: @sp-xs; }
    margin-bottom: @sp-xs;
    
    .free {
      text-align: right;
      
      span {
        padding: @sp-xs @sp-sm;
      }
    }
    
    .paid a {
      font: @body-md;
      color: @premium;
    }
  }
  
  nav {
    margin: -@sp-xs;
    
    a {
      margin: @sp-xs;
      flex: 1 0 35%;
    }
  }
}

.aspect-1-1 {
  width: 100%;
  height: 0;
  padding-top: 100%;
  position: relative;
  
  .aspect-1-1-child {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

/* drawer */
#drawer {
  width: 0;
  height: 100vh;
  
  position: fixed;
  z-index: 101;
  top: 0;
  background-color: @bg-light;
  overflow-x: hidden;
  // clip path keeps the fixed X drawer button inside the drawer
  // -1px is here so that even when width is 0, the clip path still has some area.
  clip-path: inset(0 0 0 -1px);
  clip: rect(auto, auto, auto, auto);
  
  &.closed, &.opened {
    transition: @time-sm;
    transition-timing-function: cubic-bezier(0.17, 1.07, 0.76, 1.07);
  }
  
  &.closed {
    width: 0;
  }
  
  &.opened {
    width: @px-drawerwidth;
  }
    
  .content {
    background: url("https://cdn.glitch.com/5dce4cb1-f48b-44b6-92cc-e338cf68eb7f%2Fspoopyheader.png") repeat-x 0 -1 * (@px-bannerheight - @px-bannerheight-m);
    width: @px-drawerwidth;
    box-sizing: border-box;
    padding: 0 @sp-lg @sp-lg;
    
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    
    position: absolute;
    right: 0;
  }
  
  .banner-spacer {
    width: 100%;
    height: @px-bannerheight-m;
    padding-top: @sp-lg;
    text-align: center;
  }
  
  .usernav {
    width: auto;
    
    display: flex;
  }
  
  .spacer {
    height: 50px;
  }
}

.drawer-cloak {
  // the cloak is always a 60% opaque black overlay
  background-color: rgba(0, 0, 0, 60%);
  // fills the entire screen
  height: 100vh;
  width: 100%;
  // fixed into the corner, on top of everything (except for the drawer of course)
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  overflow-x: hidden;
  
  &.closed, &.opened {
    transition-property: opacity;
    transition-duration: @time-sm;
  }
  
  &.closed {
    opacity: 0;
    pointer-events: none;
  }
  
  &.opened {
    opacity: 1;
    pointer-events: all;
  }
}

.drawer-button {
  z-index: 100;
  cursor: pointer;
  user-select: none;
  
  &.open {
    display: none;
    position: fixed;
    left: @sp-md;
    top: @sp-md;
    
    @media @sm{
      display: block;
    }
  }
  
  &.close {
    position: fixed;
    left: @sp-md;
    top: @sp-md;
  }
}

/* SPECIFIC PAGE STYLING */

/* changelog */
.changelog {
  blockquote {
    font-weight: bold;
  }
}

/* settings page */
form#updateAvatar {
  box-sizing: border-box;
  border: 3px dotted transparent;
  
  &.highlight {
    border: 3px dotted fade(@secondary, 30%);
  }
  
  .preview-changes {
    display: flex;
    justify-content: center;
    align-items: center;
    line-height: 0;
    
    img {
      width: 100%;
    }
    
    .center-arrow {
      margin: @sp-md;
      @media @xs { margin: @sp-sm; }
      
      h1 {
        transition-duration: @time-sm;
        @media @xs {
          font: @title-lg;
        }
      }
    }
    
    .current-avatar, .new-avatar {
      flex: 0 1 200px;
      padding: @sp-sm;
      @media @xs { padding: @sp-xs; }
      
      .aspect-1-1-child {
        display: flex;
        align-items: center;
        
        p {
          color: fade(@secondary, 30%);
          font-weight: bold;
          line-height: 1.2;
          text-align: center;
          
          @media @xs { display: none; }
        }
      }
    }
    
    .current-avatar {
      background-color: @bg-light;
    }
    
    .new-avatar {
      border: 3px solid @bg-dark;
      background-color: @bg-secondary;
    }
  }
  
  .form-group {
    label {
      font: @body-sm;
      margin: 0;
      background-color: @bg-light;
      padding: @sp-xs;
      
      button {
        margin-left: @sp-xs;
        pointer-events: hover;
        background-color: @bg-primary;
        
        &:hover {
          background-color: @bg-light;
        }
      }
    }
  }
}

#profileCreatures {
  .heading {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    @media @xs { flex-flow: row wrap; }
    
    h2 { margin-right: @sp-lg; }
  }
}

#creatures {
  .grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

#profileCreatures, #bestiary {
  .grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

#aboutpage {
  .heading:not(:first-child) {
    margin-top: @sp-xl;
  }
}

 /* BASE PAGE LAYOUT */

.layout {
  // lays out the grid for all page elements
  display: grid;
  grid-template-rows: [banner-top] @px-bannerheight [banner-bottom
                       navbar-top] auto [navbar-bottom
                      content-top] 1fr [content-bottom
                       footer-top] auto [footer-bottom];
  grid-template-columns: [leftcol-left] 1fr [leftcol-right
                          content-left] minmax(auto, @px-content) [content-right
                          usernav-left] 1fr [usernav-right];
  
  // makes it so the grid always takes up the entire viewport height
  // this also makes it so the footer is always at the bottom of 
  // the page or otherwise the bottom of the page content
  position: relative;
  min-height: 100vh;
}

/* banner graphic at top of page */
.banner {
  grid-row: banner-top / banner-bottom;
  grid-column: ~"1 / -1";
  
  background: @bg-primary url(@img-banner) repeat-x 50% 0;
  // make banner image Crisp
  image-rendering: optimizeSpeed;
  image-rendering: -moz-crisp-edges;          /* Firefox       */
  image-rendering: -o-crisp-edges;            /* Opera         */
  image-rendering: pixelated;                 /* CSS3 Proposed */
  -ms-interpolation-mode: nearest-neighbor;   /* IE8+          */
  
  // inside banner is a flex row
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: flex-end;
  
  padding: 21px 30px 46px;
  
  @media @sm {
    justify-content: center;
    
    .title { display: none; }
  }
}

/* navbar under banner */
.navbar {
  grid-row: navbar-top / navbar-bottom;
  grid-column: ~"1 / -1";
  
  background-color: @bg-primary;
  padding: @sp-sm @sp-md;
  
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  
  .quick-login {
    display: flex;
    flex-flow: row nowrap;
    
    form {
      .child-gutters(@sp-xs);
    }
    
    .signup {
      margin-left: 10px;
    }
  }
  
  nav {
    flex-flow: row nowrap;
    margin-right: @sp-sm;
  }
  
  @media @sm {
    nav {
      width: 100%;
      
      flex-flow: row wrap;
      justify-content: center;
      
      a {
        flex: 1 0 auto;
      }
    }
    
    .quick-login, .quick-logout {
      display: none;
    }
  }
  
  @media @xs {
    nav a {
      flex: 0 0 40%;
      padding: @sp-sm @sp-sm;
    }
  }
}

/* left column */
.column.left {
  grid-row: content-top / content-bottom;
  grid-column: leftcol-left / leftcol-right;
}

/* center column, main content */
.column.center {
  grid-row: content-top / content-bottom;
  grid-column: content-left / content-right;
  
  padding: @sp-lg;
  main.content {
    .child-gutters(@sp-lg);
  }
}

/* right column, user navbar */
.column.right {
  grid-row: content-top / content-bottom;
  grid-column: usernav-left / usernav-right;
  
  padding: @sp-lg;
  padding-left: 0;
  
  @media @sm {
    padding: 0;
  }
}

/* footer */
footer {
  grid-row: footer-top / footer-bottom;
  grid-column: ~"1 / -1";
  background-color: @bg-primary;
  
  display: flex;
  justify-content: center;
  align-items: center;
  
  font: @body-sm;
  padding: @sp-sm;
  
  @media @sm {
    nav {
      justify-content: center;
      
      a {
        flex: 1 0 auto;
      }
    }
  }
  
  @media @xs {
    nav {
      width: 100%;
      
      a {
        flex: 0 0 40%;
        padding: @sp-sm @sp-sm;
      }
    }
  }
}